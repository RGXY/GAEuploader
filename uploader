#!/usr/bin/env python

import subprocess
import os
import sys
import os.path
import webbrowser
import time

import base64
import re
def project_id_is_valid(project_id):
	return 6 <= len(project_id) <= 30 and re.match(b"^[a-z][a-z0-9-]*$", project_id)
def generate_project_id():
	while True:
		project_id = base64.b32encode(os.urandom(8)).rstrip(b'=').lower()
		if project_id_is_valid(project_id):
			return project_id

# Handles input difference between python2 and python3.
try:
   input = raw_input
except NameError:
   pass

#The code below is based on the official reference for Google Cloud.
#https://cloud.google.com/sdk/gcloud/reference/
os.chdir(os.path.dirname(sys.argv[0]))
#Sets the environmental variable to python 2.7, the version accepted by Google Cloud SDK.
os.environ["CLOUDSDK_PYTHON"] = "python2.7";
#install alpha and beta, components needed to create the project.
subprocess.check_call(["./google-cloud-sdk/bin/gcloud", "-q", "components", "install", "alpha", "beta"])
print("A pop up window will open in a few seconds asking you to login.")
print("Please keep this terminal window open, and return to it after\nyou log in and accept the terms of service in the pop-up window.")
print("\n\n\n")
time.sleep(5)
subprocess.check_call(["./google-cloud-sdk/bin/gcloud", "auth", "login"])
webbrowser.open("https://cloud.google.com/console")
time.sleep(1)
print("Please make sure that you have accepted the terms of service before\nentering your project ID below.")
print("\n")
print("Requirements for project IDs:")
print("(1) Starts with a lowercase letter.")
print("(2) Contains only lowercase ASCII letters, digits or hyphens.")
print("(3) Between 6 and 30 characters.")
print("(4) Unique.")
print("\n")

#create a project with given PROJECT_ID
while True:
	try:
		print("Suggested project ID: {}".format(generate_project_id()))
		appname = input("Enter your project ID here: ")
		subprocess.check_call(["./google-cloud-sdk/bin/gcloud", "alpha", "projects", "create", appname])
	except subprocess.CalledProcessError:
		continue
	else:
		break
#set the project property in the core section
subprocess.check_call(["./google-cloud-sdk/bin/gcloud", "beta", "config", "set", "project", appname])
#set the zone property in the compute section
subprocess.check_call(["./google-cloud-sdk/bin/gcloud", "beta", "config", "set", "compute/zone", "zone3"])
#create an App Engine app within the current Google Cloud Project.
subprocess.check_call(["./google-cloud-sdk/bin/gcloud", "beta", "app", "create", "--region=us-central", "--project=" + appname])
#deploy the meek source code onto the newly created google app engine.
subprocess.check_call(["./google-cloud-sdk/bin/gcloud", "-q", "app", "deploy", "./appengine/app.yaml"])
print("Your bridge line is:\n" + "meek 0.0.2.0:1 url=https://" + appname + ".appspot.com/ front=www.google.com")